plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'org.beryx.jlink' version '2.26.0'
}

group 'ir.sharif.math.ap2023.supermario'
version '2.0-DEV'

applicationDefaultJvmArgs = ['--add-exports=java.base/sun.nio.ch=ALL-UNNAMED',
                             '--add-opens=java.base/java.lang=ALL-UNNAMED',
                             '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
                             '--add-opens=java.base/java.io=ALL-UNNAMED',
                             '-Djava.util.logging.config.file="logging.properties"',
]

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

application {
    mainClass = 'supermario.Main'
    mainModule = 'SuperMario'
}

mainClassName = 'SuperMario/supermario.Main'

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'SuperMarioLauncher'
    }
    launcher {
        jvmArgs = ['--add-exports=java.base/sun.nio.ch=ALL-UNNAMED',
                   '--add-opens=java.base/java.lang=ALL-UNNAMED',
                   '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
                   '--add-opens=java.base/java.io=ALL-UNNAMED',
                   '-Djava.util.logging.config.file="logging.properties"']
    }
    jpackage {
        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        installerOptions += ['--vendor', 'Parsa Torbati',
                             '--app-version', version]
        if (currentOs.macOsX) {
            jvmArgs = ["-Duser.dir=/tmp"]
        } else if (currentOs.windows) {
            installerOptions = ['--win-per-user-install', '--win-dir-chooser', '--win-menu']
        } else {
            installerType = 'deb' // 'rpm'
        }
    }
}


test {
    useJUnitPlatform()
}